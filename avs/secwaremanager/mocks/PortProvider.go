// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PortProvider is an autogenerated mock type for the PortProvider type
type PortProvider struct {
	mock.Mock
}

// GetAvailablePort provides a mock function with given fields:
func (_m *PortProvider) GetAvailablePort() (int, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAvailablePort")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func() (int, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPortProvider creates a new instance of PortProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPortProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *PortProvider {
	mock := &PortProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
